{
  "version": 3,
  "sources": ["../../../app/routes/register.tsx"],
  "sourcesContent": ["import React from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport * as Yup from \"yup\"\nimport { Button, TextField } from \"@mui/material\"\n\ntype UserSubmitForm = {\n  fullname: string\n  username: string\n  email: string\n  wifeFirstName: string\n  wifeLastName: string\n  wifePhoneNumber: number\n  wifeEmail: string\n  wifeBirthYear: number\n  husbandFirstName: string\n  husbandLastName: string\n  husbandPhoneNumber: string\n  husbandEmail: string\n  husbandBirthYear: number\n  weddingYear: number\n  city: string\n  invitedBy: string\n}\n\nconst App: React.FC = () => {\n  const validationSchema = Yup.object().shape({\n    // fullname: Yup.string().required(\"Fullname is required\"),\n    wifeFirstName: Yup.string().required(\"Fullname is required\"),\n    wifeLastName: Yup.string().required(\"Fullname is required\"),\n    // username: Yup.string()\n    //   .required(\"Username is required\")\n    //   .min(6, \"Username must be at least 6 characters\")\n    //   .max(20, \"Username must not exceed 20 characters\"),\n    wifeEmail: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email is invalid\"),\n  })\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<UserSubmitForm>({\n    resolver: yupResolver(validationSchema),\n  })\n\n  const onSubmit = (data: UserSubmitForm) => {\n    console.log(data)\n  }\n\n  return (\n    <div className=\"register-form\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group\">\n          <label>Imi\u0119</label>\n          <TextField\n            type=\"text\"\n            {...register(\"wifeFirstName\")}\n            className={`form-control ${\n              errors.wifeFirstName ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {errors.wifeFirstName?.message}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Username</label>\n          <TextField\n            type=\"text\"\n            {...register(\"wifeLastName\")}\n            className={`form-control ${\n              errors.wifeLastName ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">{errors.wifeLastName?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email</label>\n          <TextField\n            type=\"text\"\n            {...register(\"wifeEmail\")}\n            className={`form-control ${errors.wifeEmail ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\n        </div>\n\n        <div className=\"form-group\">\n          <Button size=\"large\" variant=\"outlined\" type=\"submit\">\n            Submit\n          </Button>\n          <button\n            type=\"button\"\n            onClick={() => reset()}\n            className=\"btn btn-warning float-right\"\n          >\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"],
  "mappings": "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",
  "names": ["create"]
}
